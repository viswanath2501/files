

    3  wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc
    4  echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list
    5  sudo apt update -y
    6  sudo apt install temurin-17-jdk -y
    7  curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee                   /usr/share/keyrings/jenkins-keyring.asc > /dev/null
    8  echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]                   https://pkg.jenkins.io/debian-stable binary/ | sudo tee                               /etc/apt/sources.list.d/jenkins.list > /dev/null
    9  sudo apt-get update -y
   10  sudo apt-get install jenkins -y
   11  sudo systemctl start jenkins
   12  sudo systemctl status jenkins


	13 sudo apt update
	14 sudo apt install docker.io
	15 usermod -aG docker ubuntu
	16 newgrp docker
	17 chmode 777 /var/run/docker.sock
	18 docker run -d --name sonar -p 9000:9000 sonarqube:lts-community
	19 docker ps

=================================
jenkins dashboard

1 install plugins
	a)sonarqube-scanner
	b)eclips tumurin

goto=>managejenkins=>tools=>add name:jdk17
			        install from:install from adoptium.net (apply & save)

goto=>managejenkins=>tools=>add sonarscanner name:sonar-scanner (apply & save)


goto=>managejenkins=>tools=>add maven name:maven3
				install from 3.6.0 version  (apply & save)

goto=>manage jenkins=>credentials=>globel=>add credentials=>secret text=>id:sonar-token

goto=>manage jenkins=>system=>add sonarqube=>name:sonar-server
					     serverurl:<sonar dashboard url>
					     authentication:sonar-token (apply & save)




====================================================================
sonar dashboard
goto=>my account=>security=>generate token name:sonar-token

goto=>administration=>wehooks=>createwebhook=>name:sonarqube-webhook
					     url: <ip of jenkins with portnumber>/sonarqube-webhook



==================================================================

pipeline{
    agent any
    tools{
        jdk 'jdk17'
        maven 'maven3'
    }
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages{
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('checkout scm'){
            steps{
                git branch: 'main', url: 'https://github.com/PARPSY1122/register-app.git'
            }
        }
        stage('mvn compile'){
            steps{
                sh 'mvn clean compile'
            }
        }
        
        stage('mvn test'){
            steps{
                sh 'mvn test'
            }
        }
        stage("Sonarqube Analysis "){
            steps{
                withSonarQubeEnv('sonar-server') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=<projectname>\
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=<projectname> '''
                }
            }
        }
        stage("quality gate"){
            steps {
                script {
                  waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
           }
        }
        stage ('Build war file'){
            steps{
                sh 'mvn clean install -DskipTests=true'
            }
        }
       
    }
}


